[include]
path = .gitconfig.local

[filter "lfs"]
required = true
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
process = git-lfs filter-process

[apply]
# Detect whitespace errors when applying a patch
whitespace = fix

[core]
editor = code --wait
# Treat spaces before tabs and all kinds of trailing whitespace as an error
# [default] trailing-space: looks for spaces at the end of a line
# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
whitespace = space-before-tab,-indent-with-non-tab,trailing-space
# Make `git rebase` safer on macOS
# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
trustctime = false
# Prevent showing files whose names contain non-ASCII symbols as unversioned.
# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
precomposeunicode = false
# Speed up commands involving untracked files such as `git status`.
# https://git-scm.com/docs/git-update-index#_untracked_cache
untrackedCache = true

[color]
ui = auto

[color "branch"]
current = yellow reverse
local = yellow
remote = green

[color "diff"]
meta = blue bold
frag = white bold # line info
old = red         # deletions
new = green       # additions

[color "status"]
added = yellow
changed = green
untracked = cyan

[diff]
tool = code
# Detect copies as well as renames
renames = copies

[help]
# Automatically correct and execute mistyped commands
autocorrect = 1

[init]
defaultBranch = main

[merge]
tool = code
# Include summaries of merged commits in newly created merge commit messages
log = true

[pager]
branch = false
log = false

[pull]
rebase = true

[push]
# Make `git push` push relevant annotated tags when pushing branches out.
followTags = true

[alias]
a = "add"
aa = "add ."
ahead = "!git rev-list --count HEAD ^origin/$(git cb)"
behind = "!git rev-list --count origin/$(git cb) ^HEAD"
br = "branch"
c = "commit"
ca = "commit -a"
cb = "rev-parse --abbrev-ref HEAD"
cbo = "!git ls-remote --heads origin $(git cb) | sed 's@.*refs/heads/@@'"
cam = "commit -am"
cl = "clean -fd"
cm = "commit -m"
co = "checkout"
cob = "checkout -b"
d = "diff"
del = "branch -D"
delb = "!git checkout $(git main); git branch -D @{-1}"
fp = "push --force-with-lease"
l = "log --graph --pretty=format:'%C(red)%h %C(green)(%ci) %C(bold blue)<%an> %C(reset)%s%C(yellow)%d%C(reset)'"
last = "l -1"
lastd = "log --pretty=format:'%ci' -1"
lt = "!git tag --sort=-v:refname | head -n 1"
main = "!git remote show origin | grep 'HEAD branch' | sed 's/.*: //'"
p = "push"
pb = "!git push --set-upstream origin $(git cb)"
pl = "pull"
prev = "checkout @{-1}"
r = "reset --hard"
s = "status"
sp = "status --porcelain --untracked-files=all"
t = "tag"
undo = "reset HEAD~1 --mixed"
up = "!git checkout $(git main); git pull; git prev; git rebase $(git main)"
